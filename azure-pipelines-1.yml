# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'e3aea656-c584-4bbf-9c21-ea617cbde3c7'
  imageRepository: 'central'
  containerRegistry: 'grizzlyentertainment.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/central/Dockerfile'
  tag: 'latest'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:


- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool: Relic Pool
    steps:
    
    - task: Gradle@3
      inputs:
        gradleWrapperFile: 'gradlew'
        tasks: 'jarAll'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        sonarQubeRunAnalysis: false
        spotBugsAnalysis: false

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'central'
        dockerfile: '$(Build.SourcesDirectory)/central/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'channel'
        dockerfile: '$(Build.SourcesDirectory)/channel/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'realm'
        dockerfile: '$(Build.SourcesDirectory)/realm/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)      
    
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'proxy'
        dockerfile: '$(Build.SourcesDirectory)/proxy/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: CmdLine@2
      inputs:
        script: |
          docker container restart central
          docker container restart channel
          docker container restart realm
          docker container restart proxy

